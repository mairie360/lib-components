name: Test, Deploy Storybook & Publish Package

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  packages: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build_and_lighthouse:
    runs-on: ubuntu-latest
    outputs:
      src_changed: ${{ steps.check_src.outputs.changed }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build Storybook
        run: npm run build-storybook

      - name: Serve Storybook
        run: |
          npm run local-storybook &

      - name: Generate Lighthouse URLs
        run: npm run lhci:urls

      - name: Run Lighthouse
        run: npm run lhci:run

      - name: Check accessibility
        run: npm run lhci:check

      - name: Check if src/ has changed
        id: check_src
        run: |
          git fetch origin main
          CHANGED=$(git diff --name-only origin/main...HEAD | grep '^src/' || true)
          echo "changed=$([[ -n \"$CHANGED\" ]] && echo true || echo false)" >> $GITHUB_OUTPUT

      - name: Upload Storybook artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: storybook-static

  deploy:
    needs: build_and_lighthouse
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.build_and_lighthouse.outputs.src_changed == 'true'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  publish_package:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
  
      - name: Setup Node.js and authenticate
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://npm.pkg.github.com
          scope: '@mairie360'
          token: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Install dependencies
        run: npm ci
  
      - name: Build package
        run: npm run build
  
      - name: Check if version already exists
        id: version_check
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "Checking for $PACKAGE_NAME@$PACKAGE_VERSION..."
          if npm view $PACKAGE_NAME@$PACKAGE_VERSION --registry=https://npm.pkg.github.com > /dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
  
      - name: Publish package to GitHub Packages
        if: steps.version_check.outputs.exists == 'false'
        run: npm publish
